version: 2

references:

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
      - ~/.gradle
      - ~/.m2

  ## Workspace

  workspace_platform: &workspace_platform
                        ~/workspace/platform

  attach_debug_workspace_platform: &attach_debug_workspace_platform
    attach_workspace:
      at: *workspace_platform

  attach_release_workspace_platform: &attach_release_workspace_platform
    attach_workspace:
      at: *workspace_platform

  persist_debug_workspace_platform: &persist_debug_workspace_platform
    persist_to_workspace:
      root: *workspace_platform
      paths:
      - app/build/intermediates
      - app/build/outputs/androidTest-results
      - app/build/outputs/apk
      - app/build/outputs/code-coverage
      - app/build/test-results

  persist_release_workspace_platform: &persist_release_workspace_platform
    persist_to_workspace:
      root: *workspace_platform
      paths:
      - app/build/outputs/apk/platform
      - app/build/outputs/mapping/platform

  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: ~workspace

  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: ~workspace
      paths:
      - firebase

  workspace_api: &workspace_api
     ~/workspace/api

  attach_debug_workspace_api: &attach_debug_workspace_api
    attach_workspace:
      at: *workspace_api

  attach_release_workspace_api: &attach_release_workspace_api
    attach_workspace:
      at: *workspace_api

  persist_debug_workspace_api: &persist_debug_workspace_api
    persist_to_workspace:
      root: *workspace_api
      paths:
      - app/build/intermediates
      - app/build/outputs/androidTest-results
      - app/build/outputs/apk
      - app/build/outputs/code-coverage
      - app/build/test-results

  persist_release_workspace_api: &persist_release_workspace_api
    persist_to_workspace:
      root: *workspace_api
      paths:
      - app/build/outputs/apk/servicesApi
      - app/build/outputs/mapping/servicesApi

  ## Docker image configurations

  image_config_platform: &config_platform
    working_directory: *workspace_platform
    docker:
    - image: circleci/android:api-28
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  image_config_api: &config_api
    working_directory: *workspace_api
    docker:
    - image: circleci/android:api-28
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  gcloud_config: &gcloud_config
    working_directory: ~workspace
    docker:
    - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

  ## Keys

  # google-services.json
  decode_google_services_key: &decode_google_services_key
    run:
      name: Decode google services key
      command: echo GOOGLE_SERVICES_KEY > google-services.json


  # Google Play Service acc key
  decode_gplay_key: &decode_gplay_key
    run:
      name: Decode Google Play service acc key
      command: echo $GOOGLE_PLAY_KEY > $PWD/app/google_play_key.json

  # Android signing key
  decode_keystore_file: &decode_keystore_file
    run:
      name: Decode keystore.properties
      command: echo $KEYSTORE | base64 -di > $PWD/keystore.properties

  # Android signing key
  decode_fabric_key: &decode_fabric_key
    run:
      name: Decode fabric.properties
      command: echo $FABRIC_PROPERTIES > $PWD/app/fabric.properties

  # Gloud key
  decode_gcloud_key: &decode_gcloud_key
    run:
      name: Decode secret.json
      command: echo $GCLOUD_KEY > ./client-secret.json

jobs:

  ## Build debug APK and instrumented test APK
  build_debug_platform:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (debug)
        command: ./gradlew -PciBuild=true :app:assemblePlatformDebug :app:assemblePlatformDebugAndroidTest
    - *persist_debug_workspace_platform
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/

  build_debug_api:
    <<: *config_api
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (debug)
        command: ./gradlew -PciBuild=true :app:assembleServicesApiDebug :app:assembleServicesApiDebugAndroidTest
    - *persist_debug_workspace_api
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/

  ## Build release APK
  build_release_platform:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (release)
        command: ./gradlew -PciBuild=true :app:assemblePlatformRelease
    - *persist_release_workspace_platform
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/
    - store_artifacts:
        path: app/build/outputs/mapping/
        destination: /mapping/

  build_release_api:
    <<: *config_api
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (release)
        command: ./gradlew -PciBuild=true :app:assembleServicesApiRelease
    - *persist_release_workspace_api
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/
    - store_artifacts:
        path: app/build/outputs/mapping/
        destination: /mapping/

  ## Run unit tests
  test_unit:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Run platform unit tests
        command: ./gradlew test
    - *persist_debug_workspace_platform
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/
    - store_test_results:
        path: app/build/test-results/
        destination: /test-results/

  ## Run instrumented tests
  test_instrumented:
    <<: *gcloud_config
    steps:
    - *attach_debug_workspace_platform
    - *decode_gcloud_key
    - run:
        name: Authenticate with Google Cloud
        command: gcloud auth activate-service-account firebase-adminsdk-3zsqi@gps-trip-logger.iam.gserviceaccount.com --key-file ./client-secret.json
    - run:
        name: Set Google Cloud target project
        command: gcloud config set project  gps-trip-logger
    - run:
        name: Run instrumented test on Firebase Test Lab
        command: gcloud firebase test android run --app platform/app/build/outputs/apk/platform/debug/*debug.apk --test platform/app/build/outputs/apk/androidTest/platform/debug/*androidTest.apk --no-record-video --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec --directories-to-pull=/sdcard --timeout 20m
    - run:
        name: Create directory to store test results
        command: mkdir firebase
    - run:
        name: Download instrumented test results from Firebase Test Lab
        command: gsutil -m cp -r -U "`gsutil ls gs://test-lab-5370x54d253i6-hik4hxw61q2vq | tail -1`*" /root/workspace/firebase/
    - *persist_firebase_workspace
    - store_artifacts:
        path: firebase/
        destination: /firebase/


  ## Deploy release APK to Google Play Alpha
  deploy_google_play_platform:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace_platform
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Google Play alpha
        command: ./gradlew publishPlatformRelease

  deploy_google_play_api:
    <<: *config_api
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace_api
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Google Play alpha
        command: ./gradlew publishServicesApiRelease

  ## Deploy release APK to Google Play Alpha
  deploy_fabric_platform:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace_platform
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Fabric
        command: ./gradlew crashlyticsUploadDistributionPlatformRelease

  deploy_fabric_api:
    <<: *config_api
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace_api
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Fabric
        command: ./gradlew crashlyticsUploadDistributionServicesApiRelease

  report_code_cov:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Code coverage report
        command: ./gradlew jacocoTestReport
    - run:
        name: Upload report
        command: bash <(curl -s https://codecov.io/bash)
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/

  checkstyle:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Checksyle
        command: ./gradlew checkstyle
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/

  lint_check:
    <<: *config_platform
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Linter
        command: ./gradlew app:lint
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/

workflows:
  version: 2
  workflow:
    jobs:

    - lint_check

    - checkstyle

    - build_debug_platform:
        requires:
        - lint_check
        - checkstyle

    - build_debug_api:
        requires:
        - lint_check
        - checkstyle

    - build_release_platform:
        filters:
          branches:
            only:
            - master
        requires:
        - lint_check
        - checkstyle

    - build_release_api:
        filters:
          branches:
            only:
            - master
        requires:
        - lint_check
        - checkstyle

    - test_unit:
        requires:
        - build_debug_platform
        - build_debug_api

    - test_instrumented:
        requires:
        - build_debug_platform
        - build_debug_api

    - report_code_cov:
        requires:
        - test_instrumented

    - deploy_google_play_platform:
        filters:
          branches:
            only:
            - master
        requires:
        - build_release_platform
        - test_unit
        - test_instrumented

    - deploy_google_play_api:
        filters:
          branches:
            only:
            - master
        requires:
        - build_release_api
        - test_unit
        - test_instrumented

    - deploy_fabric_platform:
        filters:
          branches:
            only:
            - master
        requires:
        - build_release_platform
        - test_unit
        - test_instrumented

    - deploy_fabric_api:
        filters:
          branches:
            only:
            - master
        requires:
        - build_release_api
        - test_unit
        - test_instrumented

