version: 2

references:

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Workspace

  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/intermediates
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results
  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build

  ## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

## Keys

  # google-services.json
  decode_google_services_key: &decode_google_services_key
    run:
      name: Decode google services key
      command: echo GOOGLE_SERVICES_KEY > google-services.json


  # Google Play Service acc key
  decode_gplay_key: &decode_gplay_key
    run:
      name: Decode Google Play service acc key
      command: echo $GOOGLE_PLAY_KEY > /home/circleci/workspace/app/google_play_key.json

  # Android signing key
  decode_keystore_file: &decode_keystore_file
    run:
      name: Decode keystore.properties
      command: echo $KEYSTORE | base64 -di > keystore.properties

  # Android signing key
  decode_fabric_key: &decode_fabric_key
    run:
      name: Decode fabric.properties
      command: echo $FABRIC_PROPERTIES > app/fabric.properties

jobs:

  ## Build debug APK and instrumented test APK
  build_debug_platform:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - *decode_gplay_key
      - *decode_fabric_key
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :app:assemblePlatformDebug :app:assemblePlatformDebugAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/

  build_debug_api:
    <<: *android_config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (debug)
        command: ./gradlew -PciBuild=true :app:assembleServicesApiDebug :app:assembleServicesApiAndroidTest
    - *persist_debug_workspace
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/

  ## Build release APK
  build_release_platform:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - *decode_gplay_key
      - *decode_fabric_key
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (release)
          command: ./gradlew -PciBuild=true :app:assemblePlatformRelease
      - *persist_release_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/

  build_release_api:
    <<: *android_config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (release)
        command: ./gradlew -PciBuild=true :app:assembleServicesApiRelease
    - *persist_release_workspace
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/
    - store_artifacts:
        path: app/build/outputs/mapping/
        destination: /mapping/

  ## Run unit tests
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run platform unit tests
          command: ./gradlew test
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/test-results/
          destination: /test-results/

  ## Run instrumented tests
  test_instrumented:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies

  ## Deploy release APK to Google Play Alpha
  deploy_google_play_platform:
    <<: *android_config
    steps:
      - checkout
      - *attach_release_workspace
      - *restore_cache
      - *decode_keystore_file
      - *decode_gplay_key
      - *decode_fabric_key
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Deploy to Google Play alpha
          command: ./gradlew publishPlatformRelease

  deploy_google_play_api:
    <<: *android_config
    steps:
    - checkout
    - *attach_release_workspace
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Google Play alpha
        command: ./gradlew publishServicesApiRelease

  ## Deploy release APK to Google Play Alpha
  deploy_fabric_platform:
    <<: *android_config
    steps:
    - checkout
    - *attach_release_workspace
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Fabric
        command: ./gradlew crashlyticsUploadDistributionPlatformRelease

  deploy_fabric_api:
    <<: *android_config
    steps:
    - checkout
    - *attach_release_workspace
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Fabric
        command: ./gradlew crashlyticsUploadDistributionServicesApiRelease

  report_code_cov:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - run:
          name: Code coverage report
          command: ./gradlew jacocoTestReport
      - run:
          name: Upload report
          command: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/

  checkstyle:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - run:
          name: Checksyle
          command: ./gradlew checkstyle
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/

  lint_check:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_keystore_file
      - run:
          name: Linter
          command: ./gradlew lint
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/

workflows:
  version: 2
  workflow:
    jobs:

    - lint_check

    - checkstyle

    - build_debug_platform:
        requires:
          - lint_check
          - checkstyle

    - build_debug_api:
        requires:
          - lint_check
          - checkstyle

    - build_release_platform:
        requires:
          - lint_check
          - checkstyle

    - build_release_api:
        requires:
          - lint_check
          - checkstyle

    - test_unit:
        requires:
          - build_debug_platform
          - build_debug_api

    - test_instrumented:
        requires:
          - build_debug_platform
          - build_debug_api

    - report_code_cov:
        requires:
          - test_instrumented

    - deploy_google_play_platform:
        filters:
          branches:
            only:
              - master
        requires:
          - build_release_platform
          - test_unit
          - test_instrumented

    - deploy_google_play_api:
        filters:
          branches:
            only:
              - master
        requires:
          - build_release_api
          - test_unit
          - test_instrumented

    - deploy_fabric_platform:
        filters:
          branches:
            only:
              - master
        requires:
          - build_release_platform
          - test_unit
          - test_instrumented

    - deploy_fabric_api:
        filters:
          branches:
            only:
              - master
        requires:
          - build_release_api
          - test_unit
          - test_instrumented

