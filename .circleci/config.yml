version: 2

references:

  ## Cache
  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
      - ~/.gradle
      - ~/.m2

  ## Workspace
  workspace_platform: &workspace
                        ~/workspace

  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace

  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace

  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
      - app/build/intermediates
      - app/build/outputs/androidTest-results
      - app/build/outputs/apk
      - app/build/outputs/code-coverage
      - app/build/test-results

  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
      - app/build/outputs/apk/platform
      - app/build/outputs/mapping/platform

  ## Docker image configurations
  image_config: &config
    working_directory: *workspace
    docker:
    - image: circleci/android:api-28
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  gcloud_config: &gcloud_config
    working_directory: *workspace
    docker:
    - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

  ## Keys

  # google-services.json
  decode_google_services_key: &decode_google_services_key
    run:
      name: Decode google services key
      command: echo GOOGLE_SERVICES_KEY > google-services.json

  # Google Play Service acc key
  decode_gplay_key: &decode_gplay_key
    run:
      name: Decode Google Play service acc key
      command: echo $GOOGLE_PLAY_KEY > $PWD/app/google_play_key.json

  # Android signing key
  decode_keystore_file: &decode_keystore_file
    run:
      name: Decode keystore.properties
      command: echo $KEYSTORE | base64 -di > $PWD/keystore.properties

  # Android signing key
  decode_fabric_key: &decode_fabric_key
    run:
      name: Decode fabric.properties
      command: echo $FABRIC_PROPERTIES > $PWD/app/fabric.properties

  # Gloud key
  decode_gcloud_key: &decode_gcloud_key
    run:
      name: Decode secret.json
      command: echo $GCLOUD_KEY > ./client-secret.json

jobs:

  init_fastlane:
    <<: *config
    steps:
      - run:
          name: Init Fastlane
          command: bundle install

  ## Build debug APK and instrumented test APK
  build_debug:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (debug)
        command: ./gradlew -PciBuild=true :app:assemblePlatformDebug :app:assemblePlatformDebugAndroidTest
    - *persist_debug_workspace
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/

  ## Build release APK
  build_release:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - *save_cache
    - run:
        name: Gradle build (release)
        command: ./gradlew -PciBuild=true :app:assemblePlatformRelease
    - *persist_release_workspace
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: /apk/
    - store_artifacts:
        path: app/build/outputs/mapping/
        destination: /mapping/

  ## Run unit tests
  test_unit:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies

  ## Run instrumented tests
  test_instrumented:
    <<: *gcloud_config
    steps:
    - *attach_debug_workspace
    - *decode_gcloud_key
    - run:
        name: Instrumentation tests
        command: echo 'tests'

  ## Deploy release APK to Google Play Alpha
  deploy_google_play:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace
    - run:
        name: Deploy to Google Play alpha
        command: bundle exec fastlane deploy track:'alpha'

  ## Deploy release APK to Google Play Alpha
  deploy_fabric:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - *decode_gplay_key
    - *decode_fabric_key
    - *attach_release_workspace
    - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
    - run:
        name: Deploy to Fabric
        command: ./gradlew crashlyticsUploadDistributionPlatformRelease

  checkstyle:
    <<: *config
    steps:
    - checkout
    - *restore_cache
    - *decode_keystore_file
    - run:
        name: Checksyle
        command: ./gradlew checkstyle
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/

workflows:
  version: 2
  workflow:
    jobs:

    - checkstyle
    - init_fastlane

    - build_debug:
        requires:
        - checkstyle
        - init_fastlane

    - build_release:
        requires:
        - checkstyle
        - init_fastlane

    - test_unit:
        requires:
        - build_debug

    - test_instrumented:
        requires:
        - build_debug

    - deploy_google_play:
        requires:
        - build_release
        - test_unit
        - test_instrumented

    - deploy_fabric:
        filters:
          branches:
            only:
            - master
        requires:
        - build_release
        - test_unit
        - test_instrumented
